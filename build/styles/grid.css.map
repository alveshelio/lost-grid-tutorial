{"version":3,"sources":["../../node_modules/nib/lib/nib/normalize/html5.styl","../../node_modules/nib/lib/nib/flex.styl","grid.css","grid.styl","../../node_modules/nib/lib/nib/vendor.styl","../../node_modules/rupture/rupture/index.styl"],"names":[],"mappings":"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","file":"grid.css","sourcesContent":["// Based in Nicolas Gallagher's git.io/normalize\nnormalize-html5()\n  // `block` display for HTML5 elements in IE 8~11 and FF.\n  article, details, section, summary,\n  aside, main, menu, nav, figcaption,\n  figure, footer, header, hgroup\n    display block\n\n  audio, canvas, progress, video\n    display inline-block // Set `inline-block` not defined in IE 8~9.\n    vertical-align  baseline // Fix v-align of `progress` in Chrome, FF, and O.\n\n  audio:not([controls])\n      display none // Prevent displaying `audio` without controls.\n      height  0 // Remove excess height in iOS 5 devices.\n\n  [hidden], // Address `[hidden]` styling not present in IE 8~10.\n  template  // Hide the `template` element in IE 8~11, Safari, and FF < 22.\n    display none\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","article,\ndetails,\nsection,\nsummary,\naside,\nmain,\nmenu,\nnav,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup {\n  display: block;\n}\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n[hidden],\ntemplate {\n  display: none;\n}\nhtml {\n  font-family: 'Roboto';\n  font-weight: 300;\n  font-size: 24px;\n  color: #fff;\n  height: auto;\n  padding: 30px;\n}\ndiv div {\n  lost-utility: clearfix;\n  height: 100px;\n  line-height: 100px;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 30px;\n}\ndiv div div {\n  margin-top: 0;\n  margin-bottom: 0;\n  lost-utility: clearfix;\n}\nsection {\n  lost-center: 1140px;\n  lost-utility: clearfix;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 30px 30px 0;\n}\nsection h1 {\n  margin: 0 0 30px 0;\n}\nsection:last-of-type {\n  margin-bottom: 0;\n}\nsection:nth-of-type(1) {\n  background: #42cafd;\n}\nsection:nth-of-type(1) div div {\n  lost-column: 1/1;\n  background: #22c1fd;\n}\n@media only screen and (min-width: 410px) {\n  section:nth-of-type(1) div div {\n    lost-column: 1/2;\n  }\n}\n@media only screen and (min-width: 800px) {\n  section:nth-of-type(1) div div {\n    lost-column: 1/3;\n  }\n}\n@media only screen and (min-width: 1050px) {\n  section:nth-of-type(1) div div {\n    lost-column: 1/4;\n  }\n}\nsection:nth-of-type(2) {\n  background: #66b3ba;\n}\nsection:nth-of-type(2) div div {\n  lost-column: 1/3;\n  background: #48989f;\n}\n@media only screen and (max-width: 410px) {\n  section:nth-of-type(2) div div {\n    lost-column: 1/1;\n  }\n}\nsection:nth-of-type(2) div div:first-child {\n  lost-offset: -1/3;\n}\nsection:nth-of-type(3) {\n  background: #8eb19d;\n}\nsection:nth-of-type(3) div div {\n  lost-column: 1/1;\n  background: #68977c;\n}\n@media (min-width: 500px) {\n  section:nth-of-type(3) div div {\n    lost-column: 1/3;\n  }\n}\n@media (max-width: 499px) {\n  section:nth-of-type(3) div div:last-child {\n    float: none;\n  }\n}\nsection:nth-of-type(3) div div div {\n  background: #557b65;\n  lost-column: 1/1;\n  margin-bottom: 30px;\n}\n@media (min-width: 500px) {\n  section:nth-of-type(3) div div div {\n    lost-column: 1/2;\n  }\n}\nsection:nth-of-type(4) {\n  background: #f0d2d1;\n  height: 400px;\n}\nsection:nth-of-type(4) div {\n  lost-align: center;\n  background: #dfa09e;\n  height: 285px;\n  float: none;\n}\nsection:nth-of-type(4) div div {\n  background: #cf6f6b;\n  lost-column: 1/3;\n  height: 100px;\n}\nsection:nth-of-type(5) {\n  background: #f19a3e;\n}\nsection:nth-of-type(5) div div {\n  lost-column: 1/1;\n  background: #ef8b22;\n  height: auto;\n}\n@media only screen and (min-width: 410px) {\n  section:nth-of-type(5) div div {\n    lost-column: 2/4 2;\n  }\n}\n@media only screen and (min-width: 600px) {\n  section:nth-of-type(5) div div {\n    lost-column: 2/6 3;\n  }\n}\n@media only screen and (min-width: 800px) {\n  section:nth-of-type(5) div div {\n    lost-column: 2/8 4;\n  }\n}\nsection:nth-of-type(5) div p {\n  line-height: 25px;\n  font-size: 16px;\n}\nsection:nth-of-type(6) {\n  background: #1e90ff;\n}\nsection:nth-of-type(6) div {\n  margin-bottom: 30px;\n}\nsection:nth-of-type(6) div div {\n  lost-row: 1/3;\n  background: #007bf2;\n}\nsection:nth-of-type(7) {\n  background: #ff6347;\n}\nsection:nth-of-type(7) div {\n  margin-bottom: 30px;\n  lost-utility: clearfix;\n}\nsection:nth-of-type(7) div div {\n  lost-waffle: 1/3;\n  background: #ff3a16;\n}\nsection:nth-of-type(8) {\n  background: #5f9ea0;\n}\nsection:nth-of-type(8) div div {\n  background: #4c7e80;\n}\nsection:nth-of-type(8) div div:first-child {\n  lost-column: 1/1;\n}\n@media only screen and (min-width: 600px) {\n  section:nth-of-type(8) div div:first-child {\n    lost-column: 1/3;\n  }\n}\nsection:nth-of-type(8) div div:last-child {\n  lost-column: 1/1;\n}\n@media only screen and (min-width: 600px) {\n  section:nth-of-type(8) div div:last-child {\n    lost-column: 2/3;\n  }\n}\nsection:nth-of-type(9) {\n  background: #00ff7f;\n}\nsection:nth-of-type(9) div div {\n  background: #00b359;\n  lost-column: 1/2;\n}\nsection:nth-of-type(9) div div:first-child {\n  lost-move: 1/2;\n}\nsection:nth-of-type(9) div div:last-child {\n  lost-move: -1/2;\n}\n","@require './extra/variables'\n@require './extra/mixins'\n@require 'typographic'\n@require 'rupture'\n@require 'nib'\n\nnormalize-html5()\n\n$block = 30px\n\n\n// Rupture media queries\nrupture.scale = 0 410px 600px 800px 1050px 1800px\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\nhtml\n  font-family: 'Roboto'\n  font-weight: 300\n  font-size: 24px\n  color: #fff\n  height: auto\n  padding: $block\n\n\ndiv\n  div\n    lost-utility: clearfix;\n    height: 100px\n    line-height: 100px\n    text-align: center\n    margin-top: 0\n    margin-bottom: $block\n\n    div\n      margin-top: 0\n      margin-bottom: 0\n      lost-utility: clearfix;\n\nsection\n  lost-center: 1140px\n  lost-utility: clearfix;\n  margin-top: $block\n  margin-bottom: $block\n  padding: $block $block 0\n\n  h1\n    margin: 0 0 30px 0\n  &:last-of-type\n    margin-bottom: 0\n\n\n  // Responsive Blocks\n  &:nth-of-type(1)\n    background: #42CAFD\n    div\n\n      div\n        lost-column: 1/1\n        background: darken(#42CAFD, 10%)\n        +above(2)\n        //@media (min-width: 500px)\n          lost-column: 1/2\n        +above(4)\n        //@media (min-width: 800px)\n          lost-column: 1/3\n        +above(5)\n        //@media (min-width: 1100px)\n          lost-column: 1/4\n\n\n  // Offset\n  &:nth-of-type(2)\n    background: #66b3ba\n\n    div\n\n      div\n        lost-column: 1/3\n        background: darken(#66b3ba, 20%)\n        +at(1)\n          lost-column: 1/1\n\n      div:first-child\n        lost-offset: -1/3\n\n\n\n\n  // Nested Grid\n  &:nth-of-type(3)\n    background: #8eb19d\n\n    div\n\n      div\n        lost-column: 1/1\n        background: darken(#8eb19d, 20%)\n\n        @media(min-width: 500px)\n          lost-column: 1/3\n\n        @media(max-width: 499px)\n          &:last-child\n            float: none\n\n        div\n          background: darken(#8eb19d, 35%)\n          lost-column: 1/1\n          margin-bottom: $block\n\n          @media(min-width: 500px)\n            lost-column: 1/2\n\n\n  // Centered grid\n  &:nth-of-type(4)\n    background: #f0d2d1\n    height: 400px\n\n    div\n      lost-align: center\n      background: darken(#f0d2d1, 15%)\n      height: 285px\n      float: none\n\n      div\n        background: darken(#f0d2d1, 30%)\n        lost-column: 1/3\n        height: 100px\n\n\n  // Cycle\n  &:nth-of-type(5)\n    background: #f19a3e\n    div\n\n      div\n        lost-column: 1/1\n        background: darken(#f19a3e, 10%)\n        height: auto\n\n        +above(2)\n          lost-column: 2/4 2\n\n        +above(3)\n        //@media(min-width: 800px)\n          lost-column: 2/6 3\n\n        +above(4)\n        //@media(min-width: 1100px)\n          lost-column: 2/8 4\n\n      p\n        line-height: 25px\n        font-size: 16px\n\n\n  // Vertical Rows\n  &:nth-of-type(6)\n    background: #1e90ff\n\n    div\n      margin-bottom: $block\n      div\n        lost-row: 1/3\n        background: darken(#1e90ff, 15%)\n\n\n  // Waffle Row\n  &:nth-of-type(7)\n    background: #ff6347\n\n    div\n      margin-bottom: $block\n      lost-utility: clearfix\n\n      div\n        lost-waffle: 1/3\n        background: darken(#ff6347, 15%)\n\n\n  // Variying Size\n  &:nth-of-type(8)\n    background: #5f9ea0\n\n    div\n\n      div\n        background: darken(#5f9ea0, 20%)\n        &:first-child\n          lost-column: 1/1\n          +above(3)\n            lost-column: 1/3\n        &:last-child\n          lost-column: 1/1\n          +above(3)\n            lost-column: 2/3\n\n  // Ordering Grids\n  &:nth-of-type(9)\n    background: #00ff7f\n\n    div\n\n      div\n        background: darken(#00ff7f, 30%)\n        lost-column: 1/2\n\n        &:first-child\n          lost-move: 1/2\n\n        &:last-child\n          lost-move: -1/2\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n"]}